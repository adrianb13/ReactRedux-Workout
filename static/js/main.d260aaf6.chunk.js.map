{"version":3,"sources":["history/history.js","utils/API.js","actions/index.js","actions/types.js","components/Add.js","components/Update.js","components/Home.js","App.js","serviceWorker.js","reducer/index.js","store/index.js","index.js"],"names":["createBrowserHistory","axios","get","step","post","put","id","delete","getSteps","dispatch","API","then","res","getStepsSuccess","data","catch","err","console","log","steps","type","saveStep","saveStepSuccess","updateStep","updateStepSuccess","deleteStep","deleteStepSuccess","Add","state","name","reps","description","stepInfo","event","preventDefault","target","value","setState","message","props","parseInt","addButton","onChange","this","className","onClick","React","Component","withRouter","connect","Update","redirect","actions","updateButton","placeholder","bindActionCreators","Home","componentDidMount","dataLoad","componentWillUnmount","clearInterval","intervalId","length","loaded","add","update","findOne","list","item","filter","index","indexOf","splice","nextProps","map","key","App","history","exact","path","component","Boolean","window","location","hostname","match","initialState","rootReducer","action","Object","assign","concat","newState","removeStep","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d260aaf6.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();","import axios from \"axios\";\r\n\r\nexport default {\r\n\tgetSteps: () => {\r\n\t\treturn axios.get(\"https://workout-list-java.herokuapp.com/api/steps\");\r\n\t},\r\n\tsaveStep: (step) => {\r\n\t\treturn axios.post(\"https://workout-list-java.herokuapp.com/api/steps\", step);\r\n\t},\r\n\tupdateStep: (step) => {\r\n\t\treturn axios.put(\"https://workout-list-java.herokuapp.com/api/steps/\" + step.id , step);\r\n\t},\r\n\tdeleteStep: (step) => {\r\n\t\treturn axios.delete(\"https://workout-list-java.herokuapp.com/api/steps/\" + step.id);\r\n\t}\r\n}\r\n\r\n//http://localhost:8080/api/steps\r\n//https://workout-list-java.herokuapp.com/api/steps","import API from \"../utils/API.js\";\r\nimport * as types from \"./types.js\";\r\n\r\nexport const getSteps = () => {\r\n\treturn (dispatch) => {\r\n\t\treturn API.getSteps()\r\n\t\t.then(res => {\r\n\t\t\tdispatch(getStepsSuccess(res.data))\r\n\t\t})\r\n\t\t.catch(err => console.log(err));\r\n\t};\r\n};\r\n\r\nconst getStepsSuccess = (steps) => {\r\n\treturn {type: types.GET_STEPS_SUCCESS, steps}\r\n};\r\n\r\nexport const saveStep = (step) => {\r\n\treturn (dispatch) => {\r\n\t\treturn API.saveStep(step)\r\n\t\t.then(res => {\r\n\t\t\tdispatch(saveStepSuccess(res.data))\r\n\t\t\treturn res;\r\n\t\t})\r\n\t\t.catch(err => console.log(err));\r\n\t};\r\n};\r\n\r\nconst saveStepSuccess = (step) => {\r\n\treturn {type: types.SAVE_STEP_SUCCESS, step}\r\n};\r\n\r\nexport const updateStep = (step) => {\r\n\treturn (dispatch) => {\r\n\t\treturn API.updateStep(step)\r\n\t\t.then(res => {\r\n\t\t\tdispatch(updateStepSuccess(res.data));\r\n\t\t\treturn res;\r\n\t\t})\r\n\t\t.catch(err => console.log(err));\r\n\t};\r\n};\r\n\r\nconst updateStepSuccess = (step) => {\r\n\treturn {type: types.UPDATE_STEP_SUCCESS, step}\r\n};\r\n\r\nexport const deleteStep = (step) => {\r\n\treturn (dispatch) => {\r\n\t\treturn API.deleteStep(step)\r\n\t\t.then(res => {\r\n\t\t\tdispatch(deleteStepSuccess(step))\r\n\t\t\tAPI.getSteps();\r\n\t\t\treturn res;\r\n\t\t})\r\n\t\t.catch(err => console.log(err));\r\n\t};\r\n};\r\n\r\nconst deleteStepSuccess = (step) => {\r\n\treturn {type: types.DELETE_STEP_SUCCESS, step}\r\n};","export const GET_STEPS_SUCCESS = \"GET_STEPS_SUCCESS\";\r\nexport const SAVE_STEP_SUCCESS = \"SAVE_STEP_SUCCESS\";\r\nexport const UPDATE_STEP_SUCCESS = \"UPDATE_STEP_SUCCESS\";\r\nexport const DELETE_STEP_SUCCESS = \"DELETE_STEP_SUCCESS\";","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {saveStep} from \"../actions/index.js\";\r\n\r\nclass Add extends React.Component {\r\n\tstate = {\r\n\t\tname: \"\",\r\n\t\treps: null,\r\n\t\tdescription: \"\"\r\n\t}\r\n\t\r\n\tstepInfo = (event) => {\r\n\t\tevent.preventDefault();\r\n\t    const { name, value } = event.target;\r\n\t    this.setState({\r\n\t    \t[name]: value,\r\n\t    })\r\n\t}\r\n\t\r\n\tsaveStep = () => {\r\n\t\tif(this.state.name === (\"\" || null)){\r\n\t\t\tthis.setState({\r\n\t\t\t\tmessage: \"Please Name Your Workout Step.\"\r\n\t\t\t})\r\n\t\t} else if (this.state.reps === (\"\" || null)){\r\n\t\t\tthis.setState({\r\n\t\t\t\tmessage: \"Please Add Reps To Your Workout Step.\"\r\n\t\t\t})\r\n\t\t} else if (this.state.description === (\"\" || null)){\r\n\t\t\tthis.setState({\r\n\t\t\t\tmessage: \"Please Add A Description To Your Workout Step\"\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.props.saveStep({\r\n\t\t\t\tname: this.state.name,\r\n\t\t\t\treps: parseInt(this.state.reps),\r\n\t\t\t\tdescription: this.state.description\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tthis.props.addButton();\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(err));\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div id=\"addCont\">\r\n\t\t\t\t<h2>Add To Your Workout</h2>\r\n\t\t\t\t<div onChange={this.stepInfo}>\r\n\t\t\t\t\t<div>{this.state.message}</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"header\">Name:</div>\r\n\t\t\t\t\t\t<input name=\"name\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"header\">Reps:</div>\r\n\t\t\t\t\t\t<input name=\"reps\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"header\">Description:</div>\r\n\t\t\t\t\t\t<textarea name=\"description\"></textarea>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"bAdd\" onClick={this.saveStep}>Add</button>\r\n\t\t\t\t<button className=\"bAdd\" id=\"bCxl\" onClick={this.props.addButton}>Cancel</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {saveStep: step => dispatch(saveStep(step))}\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Add));","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actions from \"../actions/index.js\";\r\n\r\nclass Update extends React.Component {\r\n\tstate = {\r\n\t\tname: this.props.step.name,\r\n\t\treps: this.props.step.reps,\r\n\t\tdescription: this.props.step.description,\r\n\t\tredirect: false\r\n\t}\r\n\t\t\t\r\n\tstepInfo = (event) => {\r\n\t\tevent.preventDefault();\r\n\t    const { name, value } = event.target;\r\n\t    this.setState({\r\n\t    \t[name]: value,\r\n\t    })\r\n\t}\r\n\t\r\n\tupdateStep = () => {\r\n\t\tif(this.state.name === (\"\" || null)){\r\n\t\t\tthis.setState({\r\n\t\t\t\tname: this.props.step.name\r\n\t\t\t})\r\n\t\t}\r\n\t\tif(this.state.reps === (\"\" || null)){\r\n\t\t\tthis.setState({\r\n\t\t\t\treps: this.props.step.reps\r\n\t\t\t})\r\n\t\t}\r\n\t\tif(this.state.description === (\"\" || null)){\r\n\t\t\tthis.setState({\r\n\t\t\t\tdescription: this.props.step.description\r\n\t\t\t})\r\n\t\t}\r\n\t\tthis.props.actions.updateStep({\r\n\t\t\tid: this.props.id,\r\n\t\t\tname: this.state.name,\r\n\t\t\treps: parseInt(this.state.reps),\r\n\t\t\tdescription: this.state.description\r\n\t\t})\r\n\t\t.then(res => {console.log(res)})\r\n\t\t.catch(err => console.log(err))\r\n\t\tthis.props.updateButton();\r\n\t}\r\n\t\r\n\trender(){\t\t\r\n\t\treturn(\r\n\t\t\t<div className=\"back\">\r\n\t\t\t\t<div id=\"updCont\" onChange={this.stepInfo}>\r\n\t\t\t\t\t<h2>Updating \"{this.props.step.name}\"</h2>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"header\">New Name:</div>\r\n\t\t\t\t\t\t<input name=\"name\" placeholder={this.props.step.name}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"header\">New Rep Count:</div>\r\n\t\t\t\t\t\t<input name=\"reps\" placeholder={this.props.step.reps}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"header\">New Description:</div>\r\n\t\t\t\t\t\t<textarea name=\"description\" placeholder={this.props.step.description}></textarea>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className=\"bAdd\" onClick={this.updateStep}>Update</button>\r\n\t\t\t\t\t<button className=\"bAdd\" id=\"bCxl\" onClick={this.props.updateButton}>Cancel</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\t  return {actions: bindActionCreators(actions, dispatch)}\r\n\t}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Update));","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actions from \"../actions/index.js\";\r\nimport \"../App.css\";\r\n\r\nimport Add from \"./Add.js\";\r\nimport Update from \"./Update.js\";\r\n\r\nclass Home extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tsteps: [],\r\n\t\t\tstep: {},\r\n\t\t\tloaded: false,\r\n\t\t\tadd: false\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount = () => {\r\n\t\tthis.dataLoad();\r\n\t}\r\n\tcomponentDidUpdate(nextProps){\r\n\t\tif(this.props.steps !== nextProps.steps){\r\n\t\t\tthis.dataLoad();\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tcomponentWillUnmount = () => {\r\n\t\tclearInterval(this.state.intervalId);\r\n\t}\r\n\t\t\r\n\tdataLoad = () => {\r\n\t\tif(this.props.steps){\r\n\t\t\tthis.setState({\r\n\t\t\t\tsteps: this.props.steps\r\n\t\t\t}, () => {\r\n\t\t\t\tif(this.state.steps.length > 0){\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tloaded: true\r\n\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\tconsole.log(\"loaded\")\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\t\t\r\n\tdeleteStep = (step) => {\r\n\t\tthis.props.actions.deleteStep(step)\r\n\t\t.then(res => {\r\n\t\t\tthis.dataLoad();\r\n\t\t})\r\n\t}\r\n\t\r\n\taddButton = () => {\r\n\t\tthis.setState({\r\n\t\t\tadd: !this.state.add\r\n\t\t})\r\n\t}\r\n\t\r\n\tupdateButton = () => {\r\n\t\tthis.setState({\r\n\t\t\tupdate: !this.state.update\r\n\t\t})\r\n\t}\r\n\t\r\n\tfindOne = (step) => {\r\n\t\tthis.setState({\r\n\t\t\tstep: step\r\n\t\t}, () => {\r\n\t\t\tthis.updateButton()\r\n\t\t})\r\n\t}\r\n\t\r\n\tupdateStep = (step) => {\r\n\t\tthis.setState({\r\n\t\t\tstep: step\r\n\t\t}, () => {\r\n\t\t\tconst list = this.state.steps;\r\n\t\t\tconst item = list.filter(step => step.id === this.state.step.id)\r\n\t\t\tconst index = list.indexOf(item[0]);\t\r\n\t\t\tlist.splice(index, 1, this.state.step)\r\n\t\t\tthis.setState({\r\n\t\t\t\tsteps: list\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\t\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"back\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1 className=\"header\">Workout Routine</h1>\r\n\t\t\t\t\t<div className=\"container-table\">\r\n\t\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th id=\"tId\">Name</th>\r\n\t\t\t\t\t\t\t\t\t<th id=\"tReps\">Reps</th>\r\n\t\t\t\t\t\t\t\t\t<th id=\"tDesc\">Description</th>\r\n\t\t\t\t\t\t\t\t\t<th id=\"tUpd\">Update</th>\r\n\t\t\t\t\t\t\t\t\t<th id=\"tDel\">Delete</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t{this.state.loaded ? (\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{this.state.steps.map( step => (\r\n\t\t\t\t\t\t\t\t\t<tr key={step.id}>\r\n\t\t\t\t\t\t\t\t\t\t<td>{step.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td id=\"tReps\">{step.reps}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{step.description}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td id=\"bUpd\" onClick={() => this.findOne(step)}>Update</td>\r\n\t\t\t\t\t\t\t\t\t\t<td id=\"bDel\" onClick={() => this.deleteStep(step)}>Delete</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td> </td>\r\n\t\t\t\t\t\t\t\t\t\t<td> </td>\r\n\t\t\t\t\t\t\t\t\t\t<td> </td>\r\n\t\t\t\t\t\t\t\t\t\t<td> </td>\r\n\t\t\t\t\t\t\t\t\t\t<td> </td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{this.state.update ? (\r\n\t\t\t\t\t\t\t\t<Update\r\n\t\t\t\t\t\t\t\t\tid= {this.state.step.id}\r\n\t\t\t\t\t\t\t\t\tstep = {this.state.step}\r\n\t\t\t\t\t\t\t\t\tupdateButton = {this.updateButton}\r\n\t\t\t\t\t\t\t\t\tupdateStep = {this.updateStep}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t</Update>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{this.state.add ? (\r\n\t\t\t\t\t\t\t\t<div id=\"add\">\r\n\t\t\t\t\t\t\t\t\t<Add\r\n\t\t\t\t\t\t\t\t\t\taddButton={this.addButton}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div id=\"add\">\r\n\t\t\t\t\t\t\t\t\t<button className=\"bAdd\" onClick={this.addButton}>Add To Workout</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\t/*if(state.steps.length > 0){\r\n\t\tconsole.log(state.steps)\r\n\t\treturn { steps: state.steps}\r\n\t} else {\r\n\t\treturn { steps: [{id: null, name: \"\", reps: null, description: \"\"}]};\r\n\t}*/\r\n\treturn { steps: state.steps}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\t  return {actions: bindActionCreators(actions, dispatch)}\r\n\t}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","import React from 'react';\nimport { Router, Route, Switch} from \"react-router-dom\";\nimport './App.css';\n\nimport history from \"./history/history.js\";\nimport Home from \"./components/Home.js\";\nimport Update from \"./components/Update.js\";\n\nclass App extends React.Component {\n\trender(){\n\t\treturn(\n\t\t\t<Router history={history}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t<Route exact path=\"/steps\" component={Home} />\n\t\t\t\t\t<Route exact path=\"/steps/:id\" component={Update} />\n\t\t\t\t\t<Route component={Home} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t)\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n\tsteps: []\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n\tswitch (action.type){\r\n\t\tcase types.GET_STEPS_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tsteps: state.steps.concat(action.steps)\r\n\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\tcase types.SAVE_STEP_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tsteps: state.steps.concat(action.step)\r\n\t\t\t});\r\n\t\t\t\r\n\t\tcase types.UPDATE_STEP_SUCCESS:\r\n\t\t\tconst list = Object.assign([], state.steps);\r\n\t\t\tconst item = list.filter(step => step.id === action.step.id)\r\n\t\t\tconst index = list.indexOf(item[0]);\t\r\n\t\t\tlist.splice(index, 1, action.step)\r\n\t\t\tconsole.log(list)\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tsteps: list\r\n\t\t\t})\r\n\t\t\t\r\n\t\tcase types.DELETE_STEP_SUCCESS: {\r\n\t\t\tconst newState = Object.assign([], state);\r\n\t\t\tconst removeStep = newState.steps.filter(step => {\r\n\t\t\t\treturn parseInt(step.id) === parseInt(action.step.id);\r\n\t\t\t})\r\n\t\t\tconst id = newState.steps.indexOf(removeStep[0]);\r\n\t\t\tnewState.steps.splice(id, 1);\r\n\t\t\treturn newState;\r\n\t\t}\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n};\r\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducer/index.js\";\r\nimport thunk from \"redux-thunk\";\r\n \r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\"\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport store from \"./store/index.js\";\nimport { getSteps } from \"./actions/index.js\";\n\nstore.dispatch(getSteps());\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>, \n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}